@model BananasAndPeaches.Models.TaskStep

@{
    ViewBag.Title = "Create";

    int taskID;
    if (Model!= null)
    {
        taskID = Model.taskId;
    }
    else
    {
        taskID = ViewBag.tasktodoID;
    }
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TaskStep</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.timeRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.timeRequired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.timeRequired, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isDone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isDone)
                    @Html.ValidationMessageFor(model => model.isDone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="hidden" name="taskId" id="taskId" value="@taskID" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stepPriority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stepPriority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stepPriority, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tools, "tools", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tools", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tools, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>      
    </div>     
}

<div>
    @Html.ActionLink("Your Tasks", "Index", "TaskToDoes") | 
    @Html.ActionLink("This Tasks Step", "Index", new { id = ViewBag.tasktodoID })
    @*@Html.ActionLink("Add Material", "Create", "Materials", new { id = ViewBag.Id}, null)*@
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@*@Html.Partial("_CreateMaterial")*@